/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'jacoco'


}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        url = uri('https://repo.spring.io/milestone')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://repo.itextsupport.com/releases/')
    }

    maven {
        url = uri('https://jaspersoft.jfrog.io/jaspersoft/jaspersoft-repo')
    }
    maven {
        url = uri('https://jars.syncfusion.com/repository/maven-public/')
    }
    maven {
        url = uri('https://repo.e-iceblue.com/nexus/content/groups/public/')
    }
    maven {
        url "https://repository.groupdocs.com/repo/"
    }
    maven {
        url "https://repository.aspose.com/repo/"
    }



}

dependencies {
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-web-services:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'
    implementation 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
    implementation "org.springframework.boot:spring-boot-starter-artemis"
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.3'
    implementation "org.liquibase:liquibase-core:3.8.2"
    implementation 'io.jsonwebtoken:jjwt:0.2'
    implementation "org.springframework:spring-jms"
    implementation "org.apache.activemq:artemis-jms-client"
    implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'
    implementation 'hu.blackbelt.bundles.docx4j:org.docx4j:2.1.5-1'
    implementation 'hu.blackbelt.bundles.docx4j:org.docx4j:2.1.5-1'
    implementation 'hu.blackbelt.bundles.docx4j:org.docx4j:2.1.5-1'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

//    implementation 'org.javers:javers-spring-boot-starter-sql:6.6.5'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'


    liquibaseRuntime 'org.liquibase:liquibase-core:4.2.2'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.1'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    runtimeOnly 'org.postgresql:postgresql:42.3.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'

    implementation 'javax.ws.rs:javax.ws.rs-api:2.0'
    implementation 'com.sun.xml.ws:jaxws-ri:2.3.5'
    implementation group: 'javax.xml.ws', name: 'jaxws-api', version: '2.2.11'
    implementation 'com.savoirtech.logging:slf4j-json-logger:2.0.2'
//    implementation 'redis.clients:jedis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //Michael Apache PDFBox - A Java PDF Library
    implementation 'org.apache.pdfbox:pdfbox:2.0.30'
    //Michael Apache POI - Java API To Access Microsoft Format Files
//    implementation 'org.apache.poi:poi-ooxml:3.17'
    //Michael Apache POI - Java API To Access Microsoft Format Files (Scratchpad)
//    implementation 'org.apache.poi:poi-scratchpad:3.17'
    implementation 'com.github.f4b6a3:tsid-creator:5.2.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'org.testcontainers:testcontainers:1.18.3'
    testImplementation 'org.testcontainers:postgresql:1.18.3'
    testImplementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.7'
//    testImplementation 'it.ozimov:embedded-redis:0.7.2'
    implementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.7.0'
    implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.1.22'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.3'
    implementation 'com.itextpdf:typography:4.0.0'
    implementation 'com.itextpdf:html2pdf:5.0.0'
    implementation 'net.sf.jasperreports:jasperreports:6.20.5'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:javase:3.4.1'
    implementation 'net.javacrumbs.shedlock:shedlock-spring:2.2.0'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:2.1.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

//    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'
    implementation group: 'org.apache.pdfbox', name: 'fontbox', version: '2.0.30'
    implementation 'org.docx4j:docx4j-documents4j-remote:11.4.9'
    implementation 'com.documents4j:documents4j-local:1.0.3'
    implementation 'com.documents4j:documents4j-transformer-msoffice-word:1.0.3'
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.1'
//    implementation 'org.apache.poi:poi-ooxml-full:5.2.2'
    implementation group: 'com.syncfusion', name: 'syncfusion-docio', version: '18.4.0.30'
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'
    implementation group: 'org.apache.poi', name: 'poi-scratchpad', version: '5.2.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'
    implementation 'com.itextpdf:itext7-core:7.1.14'
    implementation 'com.twelvemonkeys.imageio:imageio-core:3.8.0'
    implementation 'com.twelvemonkeys.imageio:imageio-webp:3.8.0'
    implementation 'org.jsoup:jsoup:1.16.1' // Add this line
    implementation group: 'e-iceblue', name: 'spire.doc', version: '12.7.6'
    implementation group: 'com.groupdocs', name: 'groupdocs-conversion', version: '24.6'
    //Aspose
    implementation('com.aspose:aspose-words:24.9:jdk17')
    implementation('com.aspose:aspose-words:24.9:javadoc')
//    implementation 'org.harfbuzz:harfbuzz:10.0.1'
//    implementation 'org.lwjgl:lwjgl-harfbuzz:3.3.4' // LWJGL binding for HarfBuzz, optional for low-level integration

    // Add the Aspose.Words HarfBuzz shaping plugin
    implementation('com.aspose:aspose-words:24.9:shaping-harfbuzz-plugin') // Ensure the version matches your Aspose.Words version



//    implementation 'org.docx4j:docx4j-MOXy:11.4.9'
//    implementation 'org.docx4j:docx4j-ImportXHTML:11.4.9'

}

//apply plugin: "org.liquibase.gradle"
test {
    String includedTags = System.getProperty("includeTags");
    String excludedTags = System.getProperty("excludeTags");
    useJUnitPlatform {
        if (includedTags) {
            includeTags includedTags
        }
        if (excludedTags) {
            excludeTags excludedTags
        }
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}

group = 'gov.saip'
version = '0.0.1-SNAPSHOT'
description = 'application-service'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.unmappedTargetPolicy=IGNORE',
            '-Amapstruct.disableBuilders=true'
    ]


}


jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "gov/saip/applicationservice/base/*",
                    "gov/saip/applicationservice/clients/rest/feigns/*",
                    "gov/saip/applicationservice/common/mapper/*",
                    "gov/saip/applicationservice/common/model/*",
                    "gov/saip/applicationservice/common/dto/*",
                    "gov/saip/applicationservice/common/enums/*",
                    "gov/saip/applicationservice/common/repository/*",
                    "gov/saip/applicationservice/common/validators/*",
                    "gov/saip/applicationservice/config/*",
                    "gov/saip/applicationservice/security/*",
                    "gov/saip/applicationservice/Error/*",
                    "gov/saip/applicationservice/exception/*",
                    "gov/saip/applicationservice/filters/*",
                    "gov/saip/applicationservice/handlers/*",
                    "gov/saip/applicationservice/scheduler/*",
                    "gov/saip/applicationservice/util/*",
                    "gov/saip/applicationservice/report/dto/*",
                    "gov/saip/applicationservice/report/repository/*",
                    "gov/saip/applicationservice/ApplicationServiceApplication.class",

            ])
        }))
    }
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.docTitle = 'user-adminstration-Service JavaDoc'
    options.encoding = 'UTF-8'
    options.author = true
    options.version = true
    options.use = true
    options.windowTitle = 'user-adminstration-Service JavaDoc'
    source = sourceSets.main.allJava
}

task copyJavadoc(type: Copy) {
    from javadoc.destinationDir
    into 'docs'
}